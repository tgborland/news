<?php
namespace Application\Form;

use Zend\Form\Form;
use Zend\InputFilter\InputFilter;
use Zend\InputFilter\Factory as InputFactory;
use Zend\InputFilter\InputFilterInterface;


/**
 * Created by JetBrains PhpStorm.
 * @author: tgborland
 */
class NewsForm extends Form {


    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
    }

    protected $inputFilter;


    public function __construct($name = null) {
        // we want to ignore the name passed
        parent::__construct($name);

        $this->setAttribute('method', 'get');
        $this->setAttribute('class', 'news-form');
        $this->setAttribute('action', '/save');

        $this->add(array(
            'name' => '_id',
            'attributes' => array('type' => 'hidden'),
        ));

        $this->add(array('name' => 'title',
            'attributes' => array('type' => 'text',),
            'options' => array('label' => 'Название:')));

        $this->add(array('name' => 'body',
            'attributes' => array('type' => 'textarea',),
            'options' => array('label' => 'Текст новости:')));

        $this->add(array('name' => 'tags',
            'attributes' => array('type' => 'text',),
            'options' => array('label' => 'Теги (через запятую):')));

        $this->add(array('name' => 'submit',
            'attributes' => array(
                'type' => 'submit',
                'value' => 'Сохранить',
                'class' => 'submit-button'
            )));

    }

    public function getInputFilter() {
        if (!$this->inputFilter) {
            $inputFilter = new InputFilter();

            $factory = new InputFactory();

            $inputFilter->add(array('name' => 'title',
                'required' => true,));

            $inputFilter->add(array('name' => 'body',
                'required' => true,));

            $inputFilter->add(array('name' => 'tags',
                'required' => false));

            $this->inputFilter = $inputFilter;
        }

        return $this->inputFilter;
    }

    public function setData($data) {
        if (!empty($data['tags']) && is_array($data['tags'])) {
            $data['tags'] = join(',', $data['tags']);
        }

        return parent::setData($data); // TODO: Change the autogenerated stub
    }

    public function getData($flag = \Zend\Form\FormInterface::VALUES_NORMALIZED) {
        $data =  parent::getData($flag); // TODO: Change the autogenerated stub
        if (!empty($data['tags'])) {
            $data['tags'] = explode(',', $data['tags']);
        }

        return $data;
    }


}
