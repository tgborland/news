<?php
namespace Application\Form;

use Zend\Form\Form;
use Zend\InputFilter\InputFilter;
use Zend\InputFilter\Factory as InputFactory;
use Zend\InputFilter\InputFilterInterface;


/**
 * Created by JetBrains PhpStorm.
 * @author: tgborland
 */
class NewsForm extends Form {


    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
    }

    protected $inputFilter;


    public function __construct($name = null) {
        // we want to ignore the name passed
        parent::__construct($name);

        $this->setAttribute('method', 'get');
        $this->setAttribute('class', 'news-form');
        $this->setAttribute('action', '/save');

        $this->add(array('name' => 'title',
            'attributes' => array('type' => 'text',),
            'options' => array('label' => 'Название:')));

        $this->add(array('name' => 'body',
            'attributes' => array('type' => 'textarea',),
            'options' => array('label' => 'Текст новости:')));

        /*$this->add(array(
            'name' => 'title',
            'attributes' => array(
                'type'  => 'text',
            ),
            'options' => array(
                'label' => 'Title',
            ),
        ));*/

        $this->add(array('name' => 'submit',
            'attributes' => array('type' => 'submit',
                'value' => 'Сохранить',
                'id' => 'submitbutton',),));

    }

    public function getInputFilter() {
        if (!$this->inputFilter) {
            $inputFilter = new InputFilter();

            $factory = new InputFactory();

            $inputFilter->add(array('name' => 'title',
                'required' => true,));

            $inputFilter->add(array('name' => 'body',
                'required' => true,));

            $this->inputFilter = $inputFilter;
        }

        return $this->inputFilter;
    }


}
